{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","fromNavigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2SAeeA,MAZf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAEZ,sBAAKG,UAAU,mBAAf,UACI,sIADJ,IAII,6D,gFCiCOC,MAtCf,YAAuD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,qBAAKN,UAAY,QAAjB,SACI,eAAC,IAAD,CACIO,GAAI,CACAC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,WAH/C,UAMI,qBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,sBAAKF,UAAY,cAAjB,UACI,oBAAIA,UAAU,eAAd,SACKE,IACL,oBAAIF,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACKM,EAAOM,KAAI,SAACC,EAAMC,GACf,OACA,oBAAgBd,UAAU,eAA1B,SAA0Ca,GAAjCC,QAIjB,oBAAGd,UAAY,iBAAf,UAAiCI,EAAQW,MAAM,EAAG,KAAlD,kBCgDLC,G,kNApEbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAYFC,IAAMC,IAAI,yDAZR,gBASNJ,EATM,EAKVK,KAEEA,KAEEL,OAKN,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAdvB,2C,4CAqBZ,WACE,MAA8BQ,KAAKhB,MAA3BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,aADO,CACP,WAASlB,UAAY,YAArB,SACCiB,EAEC,qBAAKjB,UAAY,SAAjB,SACE,sBAAMA,UAAU,eAAhB,0BAIF,sBAAKA,UAAY,SAAjB,UAEIkB,EAAON,KAAI,SAACc,GAAD,OAET,cAAC,EAAD,CAEAC,GAAMD,EAAMC,GACZxB,KAAQuB,EAAMvB,KACdD,MAASwB,EAAMxB,MACfE,QAAWsB,EAAMtB,QACjBC,OAAUqB,EAAME,mBAChBtB,OAAUoB,EAAMpB,QANToB,EAAMC,OALnB,a,+BAyBN,WACEF,KAAKN,gB,GAhEUU,IAAMC,Y,MCQVC,MATf,WACI,OACI,sBAAK/B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAEuB,gBAAgB,IAAzD,uBCiBGC,E,uKArBX,WAEI,MAEIR,KAAK5B,MADLqC,EADJ,EACIA,SAAUC,EADd,EACcA,aAEOC,GAAlBF,EAASzB,OACR0B,EAAQE,KAAK,O,oBAIrB,WACI,IAAOH,EAAYT,KAAK5B,MAAjBqC,SACP,OAAGA,EAASzB,MACD,+BAAOyB,EAASzB,MAAMP,QAGtB,S,GAlBE2B,IAAMC,WCiBZQ,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW7C,IAHlC,IAIE,cAAC,IAAD,CAAO2C,KAAK,gBAAgBE,UAAWR,QCV7CS,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fd9a9fa8.chunk.js","sourcesContent":["import React from 'react'\nimport './About.css';\n\nfunction About(props){\n    console.log(props);\n    return (\n    <div className=\"about__container\">\n        <span>\n            \"Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.\"\n        </span>;\n        <span>- George Orwell, 1984</span>\n    </div>\n    );\n}\n\nexport default About;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport './Movie.css'; // Movie컴포넌트에는 Movie.css를 임포트\nimport { Link } from 'react-router-dom';\n\nfunction Movie({title, year, summary, poster, genres}){\n    return (\n        <div className = \"movie\">\n            <Link\n                to={{\n                    pathname: '/movie-detail',\n                    state: { year, title, summary, poster, genres },\n                }}\n            >\n                <img src={poster} alt={title} title={title} />\n                <div className = \"movie__data\">\n                    <h3 className=\"movie__title\">\n                        {title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genres\">\n                        {genres.map((genre,index)=>{\n                            return (\n                            <li key={index} className=\"movie__genre\">{genre}</li>\n                            );\n                        })}\n                    </ul>\n                    <p className = \"movie__summary\">{summary.slice(0, 180)}...</p> \n                </div>\n            </Link>\n        </div>\n    );\n}\n\n// 매개변수 유효성 검사\n// 데이터를 확인 후, id를 Movie.propTypes에 추가\nMovie.propTypes = {\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired, // 문자열을 원소로 하는 배열\n };  // poster는 이미지의 주소를 저장\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';  // Movie컴포넌트를 임포트\nimport './Home.css';   // App컴포넌트에는 App.css를 임포트\n\nclass Home extends React.Component{\n  state = {\n    isLoading: true,    // 변수 생성시 굳이 앞에 안 붙여도 되는 듯.\n    movies: [], // 이렇게 변수 이름만 써도 생성되는 듯. 로딩된 영화 데이터를 저장.\n  };\n\n  getMovies = async () => { //  괄호 앞에 붙여 getMovies()함수는 시간이 필요해라고 말하기.\n    // 실제 시간이 필요한 대상 앞에 await를 붙임. 기다려 달라고 말하는 것.\n\n  const\n  {\n    data:\n    {\n      data:\n      {       // data:안에 data:안에. (즉 data-> data-> 안에서 movies를 생성. 구조분해할당(변수)으로 저장하는 듯.\n        movies\n      },\n    },\n  } = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n  // this.setState({movies: movies}); 는 축약가능하므로, // 첫번째 movies는 state고, 두번째 movies는 구조분해할당으로 얻은 movies변수\n  this.setState({ movies, isLoading: false }); // 영화 Data를 얻어 왓으면, isLoading = false\n  //  console.log(movies);\n\n    // const movies = await axios.get('https://yts.mx/api/v2/list_movies.json'); // 반환 값 저장\n    // console.log(movies.data.data.movies);  // 얻어온 데이터를 출력\n}\n\n  render(){\n    const { isLoading, movies } = this.state;\n    return ( // JSX의 가장 바깥쪽을 section으로 감쌈.\n      <section className = \"container\">\n      {isLoading ? (\n        // 여기는 loading을 위한 곳\n        <div className = \"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        // Movie 컴포넌트들을 이 엘리먼트로 감쌈.\n        <div className = \"movies\">\n          {\n            movies.map((movie) => \n             (\n              <Movie\n              key = {movie.id}\n              id = {movie.id}\n              year = {movie.year}\n              title = {movie.title}\n              summary = {movie.summary}\n              poster = {movie.medium_cover_image}\n              genres = {movie.genres}\n              />\n             )\n            ) // 여기까지가 map()\n          }   {/* 여기서 movie 컴포넌트를 반환하면 됨.*/}\n        </div>\n    )}\n    </section>\n    ); //이 부분이 return()부분. // 이 부분에 영화 데이터를 출력.\n  } // 이 부분이 render()부분\n\n\n\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n} // 클래스형 컴포넌트 \n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation(){\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to={{ pathname: \"/about\", state: { fromNavigation: true }}}>About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Detail extends React.Component\n{\n    componentDidMount()\n    {\n        const {     // Detail 컴포넌트가 마운트되면\n            location, history  \n        } = this.props;         // 구조 분해 할당으로 location, history를 얻고,\n        if(location.state == undefined) {   // location.state가 업는 경우,\n            history.push('/');  // Home으로 이동 시킴.\n        }\n    }\n\n    render(){\n        const {location} = this.props;\n        if(location.state){\n            return <span>{location.state.title}</span>;\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route} from 'react-router-dom' // HashRouter와 Route 컴포넌트 사용\nimport About from './routes/About'; // About 컴포넌트 임포트\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation.js';\nimport Detail from './routes/Detail.js';\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/about\" component={About}/> {/* '/'인 경우는 표시되지 않으므로, */}\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}